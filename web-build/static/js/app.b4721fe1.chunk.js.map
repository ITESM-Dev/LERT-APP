{"version":3,"sources":["src/theme/theme.tsx","src/styles/body.tsx","src/components/atoms/LertButton.tsx","src/styles/fixedHeadings.tsx","src/styles/utilityStyles.tsx","src/components/atoms/LertText.tsx","src/styles/display.tsx","src/components/molecules/LegalMenu.tsx","Tests.tsx","App.tsx","assets/ItesmDev_Transparente.png","assets/IBM_logo.png","assets/fonts/IBMPlexSans-Bold.ttf","assets/fonts/IBMPlexSans-SemiBold.ttf","assets/fonts/IBMPlexSans-Light.ttf","assets/fonts/IBMPlexSans-Regular.ttf"],"names":["extendTheme","colors","light","backdrop1","backdrop2","dark","icons","primary","secondary","primaryLDark","secondayDark","components","activeState","systemGray","selectedState","placeholderActive","background","offWhite","actions","actionPrimary","actionShade0","actionShade1","actionShade2","visitedLinks","highContrast","alerts","errorPrimary","errorSecondary","warningPrimary","warningSecondary","successPrimary","successSecondary","fontConfig","IBMPlexSans","normal","semibold","bold","regular","fonts","heading","body","mono","config","initialColorMode","BodyStyles","largeParagraph","fontWeight","fontStyle","fontFamily","fontSize","lineHeight","letterSpacing","paragraphComponents","shortParagraph","expresiveLongParagraph","LertButtonStyles","backgroundColor","primaryHover","primaryPressed","borderColor","borderWidth","secondaryHover","secondaryPressed","terciary","variant","_text","_light","color","terciaryHover","terciaryPressed","danger","dangerHover","dangerPressed","ghost","ghostHover","ghostPressed","LertButton","props","title","type","disabled","onPress","style","Button","borderRadius","_hover","_pressed","FixedHeadingStyles","headingCompact","body02Layout","longLayout","longLayout2","UtilityStyles","label","helperText","Styles","display01","display02","display03","display04","LertText","Text","text","LegalMenu","textStyle","Box","bg","width","display","flexDirection","justifyContent","padding","alert","box","flex","alignItems","styles","StyleSheet","create","container","logo","height","Tests","View","marginTop","Image","source","require","margin","marginVertical","App","useFonts","NativeBaseProvider","theme","module","exports"],"mappings":"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","file":"static/js/app.b4721fe1.chunk.js","sourcesContent":["import { extendTheme } from 'native-base';\r\n\r\nexport default extendTheme({\r\n    colors: {\r\n\t\t// Add new color\r\n\t\tlight: {\r\n\t\t\tbackdrop1: '#F4F4F4',\r\n\t\t\tbackdrop2: '#FFF',\r\n\t\t},\r\n\t\tdark: {\r\n\t\t\tbackdrop1: \"#000\",\r\n\t\t\tbackdrop2: \"#262626\"\r\n\t\t},\r\n\t\ticons: {\r\n\t\t\tprimary: \"#161616\",\r\n\t\t\tsecondary: \"#525252\",\r\n\t\t\tprimaryLDark: \"#F4F4F4\",\r\n\t\t\tsecondayDark: \"#C6C6C6\"\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tactiveState: \"#C6C6C6\",\r\n\t\t\tsystemGray: \"#D3D3D6\",\r\n\t\t\tselectedState: \"#E0E0E0\",\r\n\t\t\tplaceholderActive: \"#4D4D4D\",\r\n\t\t\tbackground: \"#F7F7FC\",\r\n\t\t\toffWhite: \"#FCFCFC\"\r\n\t\t},\r\n\t\tactions: {\r\n\t\t\tactionPrimary: \"#0F62FE\",\r\n\t\t\tactionShade0: \"#D0E2FF\",\r\n\t\t\tactionShade1: \"#4589FF\",\r\n\t\t\tactionShade2: \"#0043CE\",\r\n\t\t\tvisitedLinks: \"#8A3FFC\",\r\n\t\t\thighContrast: \"#262626\"\r\n\t\t},\r\n\t\talerts: {\r\n\t\t\terrorPrimary: \"#FA4D56\",\r\n\t\t\terrorSecondary: \"#DA1E28\",\r\n\t\t\twarningPrimary: \"#F1C21B\",\r\n\t\t\twarningSecondary: \"#D6AC19\",\r\n\t\t\tsuccessPrimary: \"#42BE65\",\r\n\t\t\tsuccessSecondary: \"#198038\"\r\n\r\n\t\t}\r\n    },\r\n    fontConfig: {\r\n\t\tIBMPlexSans: {\r\n\t\t\tlight: {\r\n\t\t\t\tnormal: \"IBMPlexSans-Light\"\r\n\t\t\t},\r\n\t\t\tsemibold: {\r\n\t\t\t\tnormal: \"IBMPlexSans-SemiBold\"\r\n\t\t\t},\r\n\t\t\tbold: {\r\n\t\t\t\tnormal: \"IBMPlexSans-Bold\"\r\n\t\t\t},\r\n\t\t\tregular: {\r\n\t\t\t\tnormal: \"IBMPlexSans-Regular\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tfonts: {\r\n\t\t\theading: \"IBMPlexSans\", \r\n\t\t\tbody: \"IBMPlexSans\", //Check this one and mono since maybe they won't be used\r\n\t\t\tmono: \"IBMPlexSans\"\r\n\t\t}\r\n    },\r\n    config: {\r\n\t\tinitialColorMode: 'light',\r\n    },\r\n});","import { TextType } from \"~components/atoms/LertText\";\r\n\r\nconst BodyStyles: { [key: string]: TextType } = {\r\n    largeParagraph: {\r\n        fontWeight: \"light\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 28,\r\n        lineHeight: 36,\r\n        letterSpacing: 0 \r\n    },\r\n    paragraphComponents: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 14,\r\n        lineHeight: 18,\r\n        letterSpacing: 0.16 \r\n    },\r\n    shortParagraph: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 16,\r\n        lineHeight: 22,\r\n        letterSpacing: 0 \r\n    },\r\n    expresiveLongParagraph: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 19,\r\n        lineHeight: 22,\r\n        letterSpacing: 0.75 \r\n    },\r\n}\r\n\r\nexport type BodyTypes = keyof typeof BodyStyles;\r\nexport default BodyStyles;","\r\nimport { Button } from 'native-base'\r\nimport { ViewStyle } from 'react-native';\r\n\r\nimport BodyStyles from '~styles/body';\r\n\r\ntype LertButtonPropTypes = {\r\n    title: string;\r\n    type: string;\r\n    disabled?: boolean;\r\n    onPress: () => void;\r\n    style?: ViewStyle; \r\n}\r\n\r\n/**\r\n * @param title Text for Button\r\n * @param type \"primary\" | \"secondary\" | \"terciary\" | \"danger\" | \"ghost\"\r\n * @param style (optional) component style\r\n */\r\nconst LertButton = (props: LertButtonPropTypes) => {\r\n    \r\n    const { title, type, disabled, onPress, style } = props\r\n    \r\n    return (\r\n        <Button \r\n            // Rectangle-like shape\r\n            borderRadius={0}\r\n            // Button Type Style\r\n            {...LertButtonStyles[type]} \r\n            // Component Style\r\n            style={style}\r\n            // Hover Style\r\n            _hover={\r\n                LertButtonStyles[`${type}Hover`]\r\n            } \r\n            // OnPress Style\r\n            _pressed={{\r\n                ...LertButtonStyles[`${type}Pressed`],\r\n            }}\r\n            // Text Style\r\n            _text={{\r\n                ...BodyStyles, \r\n                ...LertButtonStyles[type]._text\r\n            }}\r\n            disabled={disabled}\r\n            onPress={onPress}\r\n        >\r\n            {title}\r\n        </Button>\r\n    );\r\n};\r\n\r\n// Type for Button Types\r\ntype StyleType = {\r\n    variant?: string;\r\n    backgroundColor?: string;\r\n    borderColor?: string;\r\n    borderWidth?:  number;\r\n    color?: string;\r\n    _text?: any;\r\n}\r\n\r\n// Button Styles\r\nconst LertButtonStyles: { [name: string]: StyleType} = {\r\n    primary: {\r\n        backgroundColor: \"actions.actionPrimary\",\r\n    },\r\n    primaryHover: {\r\n        backgroundColor: \"actions.actionShade2\"\r\n    },\r\n    primaryPressed: {\r\n        borderColor: 'light.backdrop2',\r\n        borderWidth: 2,\r\n    },\r\n    secondary: {\r\n        backgroundColor: \"dark.backdrop1\",\r\n    },\r\n    secondaryHover: {\r\n        backgroundColor: \"dark.backdrop2\"\r\n    },\r\n    secondaryPressed: {\r\n        borderColor: 'light.backdrop2',\r\n        borderWidth: 2,\r\n    },\r\n    terciary: {\r\n        borderColor: \"actions.actionPrimary\",\r\n        backgroundColor: \"light.backdrop2\",\r\n        variant: 'outline',\r\n        _text: {\r\n            _light: { color: 'actions.actionPrimary' }\r\n        }\r\n    },\r\n    terciaryHover: {\r\n        variant: 'solid',\r\n        backgroundColor: \"actions.actionPrimary\",\r\n        _text: {\r\n            _light: { color: 'light.backdrop2' }\r\n        }\r\n        \r\n    },\r\n    terciaryPressed: {\r\n        borderColor: 'light.backdrop1',\r\n        borderWidth: 2\r\n    },\r\n    danger: {\r\n        backgroundColor: \"alerts.errorSecondary\",\r\n    },\r\n    dangerHover: {\r\n        backgroundColor: \"alerts.errorPrimary\"\r\n    },\r\n    dangerPressed: {\r\n        borderColor: 'light.backdrop1',\r\n        borderWidth: 2\r\n    },\r\n    ghost: {\r\n        variant: 'ghost',\r\n        backgroundColor: 'light.background2',\r\n        _text: {\r\n            _light:  { color: 'actions.actionPrimary'}\r\n        }\r\n    },\r\n    ghostHover: {\r\n        backgroundColor: 'light.backdrop1'\r\n    },\r\n    ghostPressed: {\r\n        borderColor: 'actions.actionPrimary',\r\n        borderWidth: 2\r\n    }\r\n}\r\n\r\nexport default LertButton;","import { TextType } from \"~components/atoms/LertText\";\r\n\r\nconst FixedHeadingStyles: { [key: string]: TextType } = {\r\n    heading: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 14,\r\n        lineHeight: 18,\r\n        letterSpacing: 0.16 \r\n    },\r\n    headingCompact: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 14,\r\n        lineHeight: 18,\r\n        letterSpacing: 0.16\r\n    },\r\n    body02Layout: {\r\n        fontWeight: \"semibold\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 16,\r\n        lineHeight: 24,\r\n        letterSpacing: 0\r\n    },\r\n    longLayout: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 20,\r\n        lineHeight: 28,\r\n        letterSpacing: 0\r\n    },\r\n    longLayout2: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 32,\r\n        lineHeight: 40,\r\n        letterSpacing: 0\r\n    }\r\n}\r\n\r\nexport type FixedHadingTypes = keyof typeof FixedHeadingStyles;\r\nexport default FixedHeadingStyles;","import { TextType } from \"~components/atoms/LertText\";\r\n\r\nconst UtilityStyles: { [key: string]: TextType } = {\r\n    label: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 14,\r\n        lineHeight: 16,\r\n        letterSpacing: 0.32 \r\n    },\r\n    helperText: {\r\n        fontWeight: \"regular\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 14,\r\n        lineHeight: 18,\r\n        letterSpacing: 0.16 \r\n    }\r\n}\r\n\r\nexport type UtilityTypes = keyof typeof UtilityStyles;\r\n\r\nexport default UtilityStyles;","import { Text } from 'native-base';\r\nimport { ViewStyle } from 'react-native';\r\nimport DisplayStyles, { DisplayTypes } from '~styles/display';\r\nimport FixedHeadingStyles, { FixedHadingTypes } from '~styles/fixedHeadings';\r\nimport UtilityStyles, { UtilityTypes } from '~styles/utilityStyles';\r\nimport BodyStyles, { BodyTypes } from '~styles/body';\r\nimport theme from '../../theme/theme';\r\n\r\nexport type StyleTypes = DisplayTypes | BodyTypes | FixedHadingTypes | UtilityTypes;\r\n\r\nconst Styles = {\r\n    ...DisplayStyles,\r\n    ...BodyStyles,\r\n    ...FixedHeadingStyles,\r\n    ...UtilityStyles\r\n}\r\n\r\nexport type TextType = {\r\n    fontWeight: string,\r\n    fontStyle: string,\r\n    fontFamily: string,\r\n    fontSize: number,\r\n    lineHeight: number,\r\n    letterSpacing: number\r\n}\r\n\r\ntype LertTextPropTypes = {\r\n    text: string,\r\n    type: StyleTypes,\r\n    style?: ViewStyle,\r\n    color?: string,\r\n    onPress?: () => void;\r\n}\r\n\r\n/***\r\n * @param text The text to display\r\n * @param type The Type Style\r\n * @param style (optionl) ViewStyle to add more style\r\n */\r\nconst LertText = (props: LertTextPropTypes) => {\r\n    return (\r\n        <Text \r\n            style={props.style} \r\n            {...Styles[props.type]} \r\n            color={props.color ? props.color  :\"#14142B\"}\r\n            onPress={props.onPress}\r\n        >\r\n            {props.text}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default LertText;","import { TextType } from \"~components/atoms/LertText\";\r\n\r\nconst DisplayStyles: { [key: string]: TextType } = {\r\n    display01: {\r\n        fontWeight: \"light\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 54,\r\n        lineHeight: 64,\r\n        letterSpacing: 0 \r\n    },\r\n    display02: {\r\n        fontWeight: \"semibold\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 54,\r\n        lineHeight: 64,\r\n        letterSpacing: 0 \r\n      },\r\n      display03: {\r\n        fontWeight: \"light\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 92,\r\n        lineHeight: 102,\r\n        letterSpacing: -0.64 //check this one out \r\n      },\r\n      display04: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"body\",\r\n        fontSize: 92,\r\n        lineHeight: 102,\r\n        letterSpacing: 0.64 \r\n    }\r\n}\r\n\r\nexport type DisplayTypes = keyof typeof DisplayStyles;\r\nexport default DisplayStyles;","import { Box, View } from 'native-base'\r\n\r\nimport LertText from '~components/atoms/LertText'\r\n\r\n/**\r\n * Bottom Menu containing links to different legal information sites\r\n */\r\nconst LegalMenu = () => {\r\n\r\n    const textStyle = {\r\n        type: 'body02Layout',\r\n        color: 'light.backdrop1'\r\n    }\r\n\r\n    return (\r\n        <Box \r\n            bg='dark.backdrop1'    \r\n            width={'100%'} \r\n            display='flex' \r\n            flexDirection='row'\r\n            justifyContent='space-around'\r\n            padding={3}\r\n        >\r\n            <LertText \r\n                {...textStyle} \r\n                text='Terms of Use' \r\n                onPress={() => alert(\"Navigate to Terms of User\")}\r\n            />\r\n            <LertText \r\n                {...textStyle}\r\n                text='IBM Internal Privacy Statement' \r\n                onPress={() => alert(\"IBM Internal Privacy Statement\")}\r\n            />\r\n            <LertText \r\n                {...textStyle}\r\n                text='Feedback' \r\n                onPress={() => alert(\"Feedback\")}\r\n            />\r\n            <LertText \r\n                {...textStyle}\r\n                text='Bussiness Conduct Guidelines' \r\n                onPress={() => alert(\"Bussiness Conduct Guidelines\")}\r\n            />\r\n            <LertText \r\n                {...textStyle}\r\n                text='Contact Support' \r\n                onPress={() => alert(\"Contact Support\")}\r\n            />\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default LegalMenu;","import { StyleSheet, View, Image } from 'react-native';\r\nimport { Text, Box } from 'native-base';\r\n\r\nimport LertButton from '~components/atoms/LertButton';\r\nimport LertText from '~components/atoms/LertText';\r\nimport LegalMenu from '~components/molecules/LegalMenu';\r\n\r\nconst Tests = () => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{\r\n                flex: 2, \r\n                flexDirection: \"row\", \r\n                justifyContent: \"center\", \r\n                alignItems: \"center\",\r\n                marginTop: 20,\r\n            }}>\r\n            <Image \r\n                style={styles.logo}\r\n                source={require('./assets/ItesmDev_Transparente.png')}\r\n            />\r\n            <Image \r\n                style={{width: 320, height: 128, margin: 10}}\r\n                source={require('./assets/IBM_logo.png')}\r\n            />\r\n            </View>\r\n\r\n            <Box {...box} style={{marginVertical: 30}}>\r\n                <LertText text=\"Welcome to ItesmDev's LERT Prototypes\" type='display02'/>\r\n            </Box>\r\n\r\n            {/* LertText Display*/}\r\n            <View style={{ \r\n                marginVertical: 30,\r\n                flexDirection: 'row', \r\n                width: '100%', \r\n                justifyContent: 'space-around'\r\n            }}>\r\n                <LertText text='Display 1' type='display01'/>\r\n                <LertText text='Display 2' type='display02'/>\r\n                <LertText text='Display 3' type='display03'/>\r\n                <LertText text='Display 4' type='display04'/>\r\n            </View>\r\n\r\n            {/* LertText Body*/}\r\n            <View style={{ \r\n                marginVertical: 30,\r\n                flexDirection: 'row', \r\n                width: '100%', \r\n                justifyContent: 'space-around'\r\n            }}>\r\n                <LertText text='Paragraph Components' type='paragraphComponents'/>\r\n                <LertText text='Short Paragraph' type='shortParagraph'/>\r\n                <LertText text='Large Paragraph' type='largeParagraph'/>\r\n                <LertText text='Expresive Long Paragraphs' type='expresiveLongParagraphs'/>\r\n            </View>\r\n\r\n            {/* LertText Fixed Headings*/}\r\n            <View style={{ \r\n                marginVertical: 30,\r\n                flexDirection: 'row', \r\n                width: '100%', \r\n                justifyContent: 'space-around'\r\n            }}>\r\n                <LertText text='Heading' type='heading'/>\r\n                <LertText text='Heading Compact' type='headingCompact'/>\r\n                <LertText text='Body 02 Layout' type='body02Layout'/>\r\n                <LertText text='Long Layout' type='longLayout'/>\r\n                <LertText text='Long Layout 2' type='longLayout2'/>\r\n            </View>\r\n\r\n            {/* LertText Utility*/}\r\n            <View style={{ \r\n                marginVertical: 30,\r\n                flexDirection: 'row', \r\n                width: '100%', \r\n                justifyContent: 'space-around'\r\n            }}>\r\n                <LertText text='Label' type='label'/>\r\n                <LertText text='Helper Text' type='helperText'/>\r\n            </View>\r\n\r\n            {/* LertButton */}\r\n            <View style={{\r\n                marginVertical: 30,\r\n                height: 50, \r\n                width: '100%', \r\n                flexDirection: 'row'\r\n            }}>\r\n                <LertButton\r\n                    title='Primary'\r\n                    type={'primary'}\r\n                    onPress={() => {}}\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\t\r\n                />\r\n                <LertButton\r\n                    title='Secondary'\r\n                    type={'secondary'}\r\n                    onPress={() => {}}\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\t\r\n                />\r\n                <LertButton\r\n                    title='Terciary'\t\r\n                    type={'terciary'}\r\n                    onPress={() => {}}\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\t\r\n                />\r\n                <LertButton\r\n                    title='Danger'\t\r\n                    type={'danger'}\t\r\n                    onPress={() => {}}\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\r\n                />\r\n                <LertButton\r\n                    title='Ghost'\t\r\n                    type={'ghost'}\r\n                    onPress={() => {}}\t\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\r\n                />\r\n            </View>\r\n\r\n            {/* LegalMenu */}\r\n            <LegalMenu />\r\n            \r\n        </View>\r\n    )\r\n}\r\n\r\nconst box = {\r\n  flex: 1,\r\n  bg: \"components.systemGray\",\r\n  width: '90%',\r\n  alignItems: \"center\",\r\n  justifyContent: \"start\",\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        width: 320,\r\n        height: 160,\r\n    },\r\n    title: {\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        color: \"#00367d\"\r\n    },\r\n});\r\n\r\nexport default Tests;","import AppLoading from 'expo-app-loading';\r\nimport { useFonts } from 'expo-font';\r\n\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\nimport { NativeBaseProvider } from 'native-base';\r\n\r\nimport theme from '~theme/theme';\r\nimport Tests from 'Tests';\r\n\r\nexport default function App() {\r\n\r\n\tlet [fontsLoaded] = useFonts({\r\n\t\t\"IBMPlexSans-Bold\": require(\"./assets/fonts/IBMPlexSans-Bold.ttf\"),\r\n\t\t\"IBMPlexSans-SemiBold\": require(\"./assets/fonts/IBMPlexSans-SemiBold.ttf\"),\r\n\t\t\"IBMPlexSans-Light\": require(\"./assets/fonts/IBMPlexSans-Light.ttf\"),\r\n\t\t\"IBMPlexSans-Regular\": require(\"./assets/fonts/IBMPlexSans-Regular.ttf\")\r\n\t});\r\n\r\n\tif(!fontsLoaded) {\r\n\t\treturn <AppLoading />;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<NativeBaseProvider theme={theme}>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<Tests/>\r\n\t\t\t</View>\r\n\t\t</NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  }\r\n});\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/ItesmDev_Transparente.8dce4f77.png\";","module.exports = __webpack_public_path__ + \"static/media/IBM_logo.5382d557.png\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSans-SemiBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSans-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSans-Regular.ttf\";"],"sourceRoot":""}